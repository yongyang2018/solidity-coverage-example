name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - release*

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*


env:
  # TODO: Change variable to your image's name.
  IMAGE: solidity-coverage-example
jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/


  # Push image to dockerhub
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:       
      # To use this repository's private action,
      # you must check out the repository    
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.4.0
        with:
          node-version: 14
        
      - run: npm i
      - run: docker build -t $IMAGE .
        
      - name: Log into registry
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Push image
        run: |
          IMAGE_ID="${{ secrets.DOCKER_HUB_USERNAME }}/$IMAGE"
          
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          
          # Strip "release-" prefix from branch name 
          [[ "${{ github.ref }}" == "refs/heads/release-"* ]] && VERSION=$(echo $VERSION | sed -e 's/^release-//')    
          
          # Use Docker `latest` tag on release branch
          [ "$VERSION" == "release" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION


 
